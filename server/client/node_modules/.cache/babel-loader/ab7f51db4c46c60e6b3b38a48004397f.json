{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs3/helpers/toConsumableArray\";\nimport _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";\nimport _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\nimport { useEffect } from 'react';\nimport useInternalContext from './internal/useInternalContext';\nexport default function useObserveScrollPosition(observer) {\n  var _context;\n\n  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (observer && typeof observer !== 'function') {\n    console.error('react-scroll-to-bottom: First argument passed to \"useObserveScrollPosition\" must be a function.');\n  } else if (!_Array$isArray(deps)) {\n    console.error('react-scroll-to-bottom: Second argument passed to \"useObserveScrollPosition\" must be an array if specified.');\n  }\n\n  var _useInternalContext = useInternalContext(),\n      observeScrollPosition = _useInternalContext.observeScrollPosition;\n  /* eslint-disable-next-line react-hooks/exhaustive-deps */\n\n\n  useEffect(function () {\n    return observer && observeScrollPosition(observer);\n  }, _concatInstanceProperty(_context = []).call(_context, _toConsumableArray(deps), [!observer, observeScrollPosition]));\n}","map":{"version":3,"sources":["../../../src/hooks/useObserveScrollPosition.js"],"names":["deps","observer","console","observeScrollPosition","useInternalContext","useEffect"],"mappings":";;;AAAA,SAAA,SAAA,QAAA,OAAA;AAEA,OAAA,kBAAA,MAAA,+BAAA;AAEA,eAAe,SAAA,wBAAA,CAAA,QAAA,EAAuD;AAAA,MAAA,QAAA;;AAAA,MAAXA,IAAW,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;;AACpE,MAAIC,QAAQ,IAAI,OAAA,QAAA,KAAhB,UAAA,EAAgD;AAC9CC,IAAAA,OAAO,CAAPA,KAAAA,CAAAA,iGAAAA;AADF,GAAA,MAEO,IAAI,CAAC,cAAA,CAAL,IAAK,CAAL,EAA0B;AAC/BA,IAAAA,OAAO,CAAPA,KAAAA,CAAAA,6GAAAA;AAGD;;AAED,MAAA,mBAAA,GAAkCE,kBAAlC,EAAA;AAAA,MAAQD,qBAAR,GAAA,mBAAA,CAAA,qBAAA;AAEA;;;AACAE,EAAAA,SAAS,CAAC,YAAA;AAAA,WAAMJ,QAAQ,IAAIE,qBAAqB,CAAvC,QAAuC,CAAvC;AAAD,GAAA,EAAA,uBAAA,CAAA,QAAA,GAAA,EAAA,CAAA,CAAA,IAAA,CAAA,QAAA,EAAA,kBAAA,CAAA,IAAA,CAAA,EAAA,CAA8D,CAA9D,QAAA,EAATE,qBAAS,CAAA,CAAA,CAATA;AACD","sourcesContent":["import { useEffect } from 'react';\n\nimport useInternalContext from './internal/useInternalContext';\n\nexport default function useObserveScrollPosition(observer, deps = []) {\n  if (observer && typeof observer !== 'function') {\n    console.error('react-scroll-to-bottom: First argument passed to \"useObserveScrollPosition\" must be a function.');\n  } else if (!Array.isArray(deps)) {\n    console.error(\n      'react-scroll-to-bottom: Second argument passed to \"useObserveScrollPosition\" must be an array if specified.'\n    );\n  }\n\n  const { observeScrollPosition } = useInternalContext();\n\n  /* eslint-disable-next-line react-hooks/exhaustive-deps */\n  useEffect(() => observer && observeScrollPosition(observer), [...deps, !observer, observeScrollPosition]);\n}\n"]},"metadata":{},"sourceType":"module"}