{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { separableConv2d } from '../../ops/separable_conv2d';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.separableConv2d = function (depthwiseFilter, pointwiseFilter, strides, pad, dilation, dataFormat) {\n  this.throwIfDisposed();\n  return separableConv2d(this, depthwiseFilter, pointwiseFilter, strides, pad, dilation, dataFormat);\n};","map":{"version":3,"sources":["../../../../../../../tfjs-core/src/public/chained_ops/separable_conv2d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,eAAR,QAA8B,4BAA9B;AACA,SAAQ,oBAAR,QAAuD,cAAvD;;AAaA,oBAAoB,GAAG,SAAvB,CAAiC,eAAjC,GACI,UACI,eADJ,EAEI,eAFJ,EAE0C,OAF1C,EAGI,GAHJ,EAGyB,QAHzB,EAII,UAJJ,EAI8B;AAChC,OAAK,eAAL;AACA,SAAO,eAAe,CACX,IADW,EACL,eADK,EACY,eADZ,EAC6B,OAD7B,EACsC,GADtC,EAC2C,QAD3C,EAEX,UAFW,CAAtB;AAGD,CAVD","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {separableConv2d} from '../../ops/separable_conv2d';\nimport {getGlobalTensorClass, Tensor3D, Tensor4D} from '../../tensor';\nimport {Rank, TensorLike, TensorLike4D} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    separableConv2d<T extends Tensor3D|Tensor4D>(\n        depthwiseFilter: Tensor4D|TensorLike4D,\n        pointwiseFilter: Tensor4D|TensorLike, strides: [number, number]|number,\n        pad: 'valid'|'same', dilation?: [number, number]|number,\n        dataFormat?: 'NHWC'|'NCHW'): T;\n  }\n}\n\ngetGlobalTensorClass().prototype.separableConv2d =\n    function<T extends Tensor3D|Tensor4D>(\n        depthwiseFilter: Tensor4D|TensorLike4D,\n        pointwiseFilter: Tensor4D|TensorLike, strides: [number, number]|number,\n        pad: 'valid'|'same', dilation?: [number, number]|number,\n        dataFormat?: 'NHWC'|'NCHW'): T {\n  this.throwIfDisposed();\n  return separableConv2d(\n             this, depthwiseFilter, pointwiseFilter, strides, pad, dilation,\n             dataFormat) as T;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}