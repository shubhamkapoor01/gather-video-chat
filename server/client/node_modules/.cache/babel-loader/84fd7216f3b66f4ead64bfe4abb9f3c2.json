{"ast":null,"code":"var uncurryThis = require('../internals/function-uncurry-this');\n\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar toString = require('../internals/to-string');\n\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar stringSlice = uncurryThis(''.slice);\n\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = toString(requireObjectCoercible($this));\n    var position = toIntegerOrInfinity(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = charCodeAt(S, position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF ? CONVERT_TO_STRING ? charAt(S, position) : first : CONVERT_TO_STRING ? stringSlice(S, position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};","map":{"version":3,"sources":["C:/Users/mozah/Desktop/Hanzla College files/Gather/ver-1/gather-video-chat/server/client/node_modules/core-js-pure/internals/string-multibyte.js"],"names":["uncurryThis","require","toIntegerOrInfinity","toString","requireObjectCoercible","charAt","charCodeAt","stringSlice","slice","createMethod","CONVERT_TO_STRING","$this","pos","S","position","size","length","first","second","undefined","module","exports","codeAt"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,oCAAD,CAAzB;;AACA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,qCAAD,CAAjC;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,sBAAsB,GAAGH,OAAO,CAAC,uCAAD,CAApC;;AAEA,IAAII,MAAM,GAAGL,WAAW,CAAC,GAAGK,MAAJ,CAAxB;AACA,IAAIC,UAAU,GAAGN,WAAW,CAAC,GAAGM,UAAJ,CAA5B;AACA,IAAIC,WAAW,GAAGP,WAAW,CAAC,GAAGQ,KAAJ,CAA7B;;AAEA,IAAIC,YAAY,GAAG,UAAUC,iBAAV,EAA6B;AAC9C,SAAO,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AAC3B,QAAIC,CAAC,GAAGV,QAAQ,CAACC,sBAAsB,CAACO,KAAD,CAAvB,CAAhB;AACA,QAAIG,QAAQ,GAAGZ,mBAAmB,CAACU,GAAD,CAAlC;AACA,QAAIG,IAAI,GAAGF,CAAC,CAACG,MAAb;AACA,QAAIC,KAAJ,EAAWC,MAAX;AACA,QAAIJ,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,IAAIC,IAAhC,EAAsC,OAAOL,iBAAiB,GAAG,EAAH,GAAQS,SAAhC;AACtCF,IAAAA,KAAK,GAAGX,UAAU,CAACO,CAAD,EAAIC,QAAJ,CAAlB;AACA,WAAOG,KAAK,GAAG,MAAR,IAAkBA,KAAK,GAAG,MAA1B,IAAoCH,QAAQ,GAAG,CAAX,KAAiBC,IAArD,IACF,CAACG,MAAM,GAAGZ,UAAU,CAACO,CAAD,EAAIC,QAAQ,GAAG,CAAf,CAApB,IAAyC,MADvC,IACiDI,MAAM,GAAG,MAD1D,GAEDR,iBAAiB,GACfL,MAAM,CAACQ,CAAD,EAAIC,QAAJ,CADS,GAEfG,KAJD,GAKDP,iBAAiB,GACfH,WAAW,CAACM,CAAD,EAAIC,QAAJ,EAAcA,QAAQ,GAAG,CAAzB,CADI,GAEf,CAACG,KAAK,GAAG,MAAR,IAAkB,EAAnB,KAA0BC,MAAM,GAAG,MAAnC,IAA6C,OAPrD;AAQD,GAfD;AAgBD,CAjBD;;AAmBAE,MAAM,CAACC,OAAP,GAAiB;AACf;AACA;AACAC,EAAAA,MAAM,EAAEb,YAAY,CAAC,KAAD,CAHL;AAIf;AACA;AACAJ,EAAAA,MAAM,EAAEI,YAAY,CAAC,IAAD;AANL,CAAjB","sourcesContent":["var uncurryThis = require('../internals/function-uncurry-this');\r\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\r\nvar toString = require('../internals/to-string');\r\nvar requireObjectCoercible = require('../internals/require-object-coercible');\r\n\r\nvar charAt = uncurryThis(''.charAt);\r\nvar charCodeAt = uncurryThis(''.charCodeAt);\r\nvar stringSlice = uncurryThis(''.slice);\r\n\r\nvar createMethod = function (CONVERT_TO_STRING) {\r\n  return function ($this, pos) {\r\n    var S = toString(requireObjectCoercible($this));\r\n    var position = toIntegerOrInfinity(pos);\r\n    var size = S.length;\r\n    var first, second;\r\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\r\n    first = charCodeAt(S, position);\r\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\r\n      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF\r\n        ? CONVERT_TO_STRING\r\n          ? charAt(S, position)\r\n          : first\r\n        : CONVERT_TO_STRING\r\n          ? stringSlice(S, position, position + 2)\r\n          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\r\n  };\r\n};\r\n\r\nmodule.exports = {\r\n  // `String.prototype.codePointAt` method\r\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\r\n  codeAt: createMethod(false),\r\n  // `String.prototype.at` method\r\n  // https://github.com/mathiasbynens/String.prototype.at\r\n  charAt: createMethod(true)\r\n};\r\n"]},"metadata":{},"sourceType":"script"}