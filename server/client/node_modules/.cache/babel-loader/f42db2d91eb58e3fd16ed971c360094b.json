{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [{\n  \"tfOpName\": \"FusedBatchNorm\",\n  \"category\": \"normalization\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"scale\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 2,\n    \"name\": \"offset\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 3,\n    \"name\": \"mean\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 4,\n    \"name\": \"variance\",\n    \"type\": \"tensor\"\n  }],\n  \"attrs\": [{\n    \"tfName\": \"epsilon\",\n    \"name\": \"epsilon\",\n    \"type\": \"number\",\n    \"defaultValue\": 0.001\n  }, {\n    \"tfName\": \"data_format\",\n    \"name\": \"dataFormat\",\n    \"type\": \"string\",\n    \"notSupported\": true\n  }]\n}, {\n  \"tfOpName\": \"FusedBatchNormV2\",\n  \"category\": \"normalization\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"scale\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 2,\n    \"name\": \"offset\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 3,\n    \"name\": \"mean\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 4,\n    \"name\": \"variance\",\n    \"type\": \"tensor\"\n  }],\n  \"attrs\": [{\n    \"tfName\": \"epsilon\",\n    \"name\": \"epsilon\",\n    \"type\": \"number\",\n    \"defaultValue\": 0.001\n  }, {\n    \"tfName\": \"data_format\",\n    \"name\": \"dataFormat\",\n    \"type\": \"string\",\n    \"notSupported\": true\n  }]\n}, {\n  \"tfOpName\": \"FusedBatchNormV3\",\n  \"category\": \"normalization\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"scale\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 2,\n    \"name\": \"offset\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 3,\n    \"name\": \"mean\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 4,\n    \"name\": \"variance\",\n    \"type\": \"tensor\"\n  }],\n  \"attrs\": [{\n    \"tfName\": \"epsilon\",\n    \"name\": \"epsilon\",\n    \"type\": \"number\",\n    \"defaultValue\": 0.001\n  }, {\n    \"tfName\": \"data_format\",\n    \"name\": \"dataFormat\",\n    \"type\": \"string\",\n    \"notSupported\": true\n  }]\n}, {\n  \"tfOpName\": \"LRN\",\n  \"category\": \"normalization\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }],\n  \"attrs\": [{\n    \"tfName\": \"depth_radius\",\n    \"name\": \"radius\",\n    \"type\": \"number\",\n    \"defaultValue\": 5\n  }, {\n    \"tfName\": \"bias\",\n    \"name\": \"bias\",\n    \"type\": \"number\",\n    \"defaultValue\": 1\n  }, {\n    \"tfName\": \"alpha\",\n    \"name\": \"alpha\",\n    \"type\": \"number\",\n    \"defaultValue\": 1\n  }, {\n    \"tfName\": \"beta\",\n    \"name\": \"beta\",\n    \"type\": \"number\",\n    \"defaultValue\": 0.5\n  }]\n}, {\n  \"tfOpName\": \"Softmax\",\n  \"category\": \"normalization\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }]\n}, {\n  \"tfOpName\": \"LogSoftmax\",\n  \"category\": \"normalization\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }]\n}, {\n  \"tfOpName\": \"SparseToDense\",\n  \"category\": \"normalization\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"sparseIndices\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"outputShape\",\n    \"type\": \"number[]\"\n  }, {\n    \"start\": 2,\n    \"name\": \"sparseValues\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 3,\n    \"name\": \"defaultValue\",\n    \"type\": \"tensor\"\n  }],\n  \"attrs\": [{\n    \"tfName\": \"validate_indices\",\n    \"name\": \"validateIndices\",\n    \"type\": \"bool\",\n    \"defaultValue\": true,\n    \"notSupported\": true\n  }]\n}];","map":{"version":3,"sources":["../../../../../../../tfjs-converter/src/operations/op_list/normalization.ts"],"names":[],"mappings":"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","sourcesContent":["\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    \"tfOpName\": \"FusedBatchNorm\",\n    \"category\": \"normalization\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"scale\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 2,\n        \"name\": \"offset\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 3,\n        \"name\": \"mean\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 4,\n        \"name\": \"variance\",\n        \"type\": \"tensor\"\n      }\n    ],\n    \"attrs\": [\n      {\n        \"tfName\": \"epsilon\",\n        \"name\": \"epsilon\",\n        \"type\": \"number\",\n        \"defaultValue\": 0.001\n      },\n      {\n        \"tfName\": \"data_format\",\n        \"name\": \"dataFormat\",\n        \"type\": \"string\",\n        \"notSupported\": true\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"FusedBatchNormV2\",\n    \"category\": \"normalization\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"scale\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 2,\n        \"name\": \"offset\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 3,\n        \"name\": \"mean\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 4,\n        \"name\": \"variance\",\n        \"type\": \"tensor\"\n      }\n    ],\n    \"attrs\": [\n      {\n        \"tfName\": \"epsilon\",\n        \"name\": \"epsilon\",\n        \"type\": \"number\",\n        \"defaultValue\": 0.001\n      },\n      {\n        \"tfName\": \"data_format\",\n        \"name\": \"dataFormat\",\n        \"type\": \"string\",\n        \"notSupported\": true\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"FusedBatchNormV3\",\n    \"category\": \"normalization\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"scale\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 2,\n        \"name\": \"offset\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 3,\n        \"name\": \"mean\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 4,\n        \"name\": \"variance\",\n        \"type\": \"tensor\"\n      }\n    ],\n    \"attrs\": [\n      {\n        \"tfName\": \"epsilon\",\n        \"name\": \"epsilon\",\n        \"type\": \"number\",\n        \"defaultValue\": 0.001\n      },\n      {\n        \"tfName\": \"data_format\",\n        \"name\": \"dataFormat\",\n        \"type\": \"string\",\n        \"notSupported\": true\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"LRN\",\n    \"category\": \"normalization\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      }\n    ],\n    \"attrs\": [\n      {\n        \"tfName\": \"depth_radius\",\n        \"name\": \"radius\",\n        \"type\": \"number\",\n        \"defaultValue\": 5\n      },\n      {\n        \"tfName\": \"bias\",\n        \"name\": \"bias\",\n        \"type\": \"number\",\n        \"defaultValue\": 1\n      },\n      {\n        \"tfName\": \"alpha\",\n        \"name\": \"alpha\",\n        \"type\": \"number\",\n        \"defaultValue\": 1\n      },\n      {\n        \"tfName\": \"beta\",\n        \"name\": \"beta\",\n        \"type\": \"number\",\n        \"defaultValue\": 0.5\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"Softmax\",\n    \"category\": \"normalization\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"LogSoftmax\",\n    \"category\": \"normalization\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"SparseToDense\",\n    \"category\": \"normalization\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"sparseIndices\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"outputShape\",\n        \"type\": \"number[]\"\n      },\n      {\n        \"start\": 2,\n        \"name\": \"sparseValues\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 3,\n        \"name\": \"defaultValue\",\n        \"type\": \"tensor\"\n      }\n    ],\n    \"attrs\": [\n      {\n        \"tfName\": \"validate_indices\",\n        \"name\": \"validateIndices\",\n        \"type\": \"bool\",\n        \"defaultValue\": true,\n        \"notSupported\": true\n      }\n    ]\n  }\n];\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}