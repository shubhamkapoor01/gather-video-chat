{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\n// Import shared functionality from tfjs-backend-cpu without triggering\n// side effects.\n// tslint:disable-next-line: no-imports-from-dist\nimport * as shared from '@tensorflow/tfjs-backend-cpu/dist/shared';\nconst {\n  addImpl: addImplCPU,\n  bincountImpl: bincountImplCPU,\n  bincountReduceImpl: bincountReduceImplCPU,\n  ceilImpl: ceilImplCPU,\n  concatImpl: concatImplCPU,\n  equalImpl: equalImplCPU,\n  expImpl: expImplCPU,\n  expm1Impl: expm1ImplCPU,\n  floorImpl: floorImplCPU,\n  gatherNdImpl: gatherNdImplCPU,\n  gatherV2Impl: gatherV2ImplCPU,\n  greaterImpl: greaterImplCPU,\n  greaterEqualImpl: greaterEqualImplCPU,\n  lessImpl: lessImplCPU,\n  lessEqualImpl: lessEqualImplCPU,\n  linSpaceImpl: linSpaceImplCPU,\n  logImpl: logImplCPU,\n  maxImpl: maxImplCPU,\n  maximumImpl: maximumImplCPU,\n  minimumImpl: minimumImplCPU,\n  multiplyImpl: multiplyImplCPU,\n  negImpl: negImplCPU,\n  notEqualImpl: notEqualImplCPU,\n  prodImpl: prodImplCPU,\n  rangeImpl: rangeImplCPU,\n  rsqrtImpl: rsqrtImplCPU,\n  sigmoidImpl: sigmoidImplCPU,\n  simpleAbsImpl: simpleAbsImplCPU,\n  sliceImpl: sliceImplCPU,\n  sparseFillEmptyRowsImpl: sparseFillEmptyRowsImplCPU,\n  sparseReshapeImpl: sparseReshapeImplCPU,\n  sparseSegmentReductionImpl: sparseSegmentReductionImplCPU,\n  sqrtImpl: sqrtImplCPU,\n  stridedSliceImpl: stridedSliceImplCPU,\n  stringNGramsImpl: stringNGramsImplCPU,\n  stringSplitImpl: stringSplitImplCPU,\n  stringToHashBucketFastImpl: stringToHashBucketFastImplCPU,\n  subImpl: subImplCPU,\n  tileImpl: tileImplCPU,\n  topKImpl: topKImplCPU,\n  transposeImpl: transposeImplCPU,\n  uniqueImpl: uniqueImplCPU\n} = shared;\nexport { addImplCPU, bincountImplCPU, bincountReduceImplCPU, ceilImplCPU, concatImplCPU, equalImplCPU, expImplCPU, expm1ImplCPU, floorImplCPU, gatherNdImplCPU, gatherV2ImplCPU, greaterEqualImplCPU, greaterImplCPU, lessEqualImplCPU, lessImplCPU, linSpaceImplCPU, logImplCPU, maxImplCPU, maximumImplCPU, minimumImplCPU, multiplyImplCPU, negImplCPU, notEqualImplCPU, prodImplCPU, sigmoidImplCPU, simpleAbsImplCPU, sliceImplCPU, sparseFillEmptyRowsImplCPU, sparseReshapeImplCPU, sparseSegmentReductionImplCPU, sqrtImplCPU, stridedSliceImplCPU, stringNGramsImplCPU, stringSplitImplCPU, stringToHashBucketFastImplCPU, subImplCPU, rangeImplCPU, rsqrtImplCPU, tileImplCPU, topKImplCPU, transposeImplCPU, uniqueImplCPU };","map":{"version":3,"sources":["../../../../../../tfjs-backend-webgl/src/kernel_utils/shared.ts"],"names":[],"mappings":"AACA;;;;;;;;;;;;;;;AAeG;AAEH;AACA;AACA;AACA,OAAO,KAAK,MAAZ,MAAwB,0CAAxB;AAQA,MAAM;AACJ,EAAA,OAAO,EAAE,UADL;AAEJ,EAAA,YAAY,EAAE,eAFV;AAGJ,EAAA,kBAAkB,EAAE,qBAHhB;AAIJ,EAAA,QAAQ,EAAE,WAJN;AAKJ,EAAA,UAAU,EAAE,aALR;AAMJ,EAAA,SAAS,EAAE,YANP;AAOJ,EAAA,OAAO,EAAE,UAPL;AAQJ,EAAA,SAAS,EAAE,YARP;AASJ,EAAA,SAAS,EAAE,YATP;AAUJ,EAAA,YAAY,EAAE,eAVV;AAWJ,EAAA,YAAY,EAAE,eAXV;AAYJ,EAAA,WAAW,EAAE,cAZT;AAaJ,EAAA,gBAAgB,EAAE,mBAbd;AAcJ,EAAA,QAAQ,EAAE,WAdN;AAeJ,EAAA,aAAa,EAAE,gBAfX;AAgBJ,EAAA,YAAY,EAAE,eAhBV;AAiBJ,EAAA,OAAO,EAAE,UAjBL;AAkBJ,EAAA,OAAO,EAAE,UAlBL;AAmBJ,EAAA,WAAW,EAAE,cAnBT;AAoBJ,EAAA,WAAW,EAAE,cApBT;AAqBJ,EAAA,YAAY,EAAE,eArBV;AAsBJ,EAAA,OAAO,EAAE,UAtBL;AAuBJ,EAAA,YAAY,EAAE,eAvBV;AAwBJ,EAAA,QAAQ,EAAE,WAxBN;AAyBJ,EAAA,SAAS,EAAE,YAzBP;AA0BJ,EAAA,SAAS,EAAE,YA1BP;AA2BJ,EAAA,WAAW,EAAE,cA3BT;AA4BJ,EAAA,aAAa,EAAE,gBA5BX;AA6BJ,EAAA,SAAS,EAAE,YA7BP;AA8BJ,EAAA,uBAAuB,EAAE,0BA9BrB;AA+BJ,EAAA,iBAAiB,EAAE,oBA/Bf;AAgCJ,EAAA,0BAA0B,EAAE,6BAhCxB;AAiCJ,EAAA,QAAQ,EAAE,WAjCN;AAkCJ,EAAA,gBAAgB,EAAE,mBAlCd;AAmCJ,EAAA,gBAAgB,EAAE,mBAnCd;AAoCJ,EAAA,eAAe,EAAE,kBApCb;AAqCJ,EAAA,0BAA0B,EAAE,6BArCxB;AAsCJ,EAAA,OAAO,EAAE,UAtCL;AAuCJ,EAAA,QAAQ,EAAE,WAvCN;AAwCJ,EAAA,QAAQ,EAAE,WAxCN;AAyCJ,EAAA,aAAa,EAAE,gBAzCX;AA0CJ,EAAA,UAAU,EAAE;AA1CR,IA2CF,MA3CJ;AA6CA,SACE,UADF,EAEE,eAFF,EAGE,qBAHF,EAIE,WAJF,EAKE,aALF,EAME,YANF,EAOE,UAPF,EAQE,YARF,EASE,YATF,EAUE,eAVF,EAWE,eAXF,EAYE,mBAZF,EAaE,cAbF,EAcE,gBAdF,EAeE,WAfF,EAgBE,eAhBF,EAiBE,UAjBF,EAkBE,UAlBF,EAmBE,cAnBF,EAoBE,cApBF,EAqBE,eArBF,EAsBE,UAtBF,EAuBE,eAvBF,EAwBE,WAxBF,EAyBE,cAzBF,EA0BE,gBA1BF,EA2BE,YA3BF,EA4BE,0BA5BF,EA6BE,oBA7BF,EA8BE,6BA9BF,EA+BE,WA/BF,EAgCE,mBAhCF,EAiCE,mBAjCF,EAkCE,kBAlCF,EAmCE,6BAnCF,EAoCE,UApCF,EAqCE,YArCF,EAsCE,YAtCF,EAuCE,WAvCF,EAwCE,WAxCF,EAyCE,gBAzCF,EA0CE,aA1CF","sourcesContent":["\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// Import shared functionality from tfjs-backend-cpu without triggering\n// side effects.\n// tslint:disable-next-line: no-imports-from-dist\nimport * as shared from '@tensorflow/tfjs-backend-cpu/dist/shared';\n// tslint:disable-next-line: no-imports-from-dist\nimport {SimpleBinaryKernelImpl} from '@tensorflow/tfjs-backend-cpu/dist/shared';\n// tslint:disable-next-line: no-imports-from-dist\nimport {SimpleUnaryImpl} from '@tensorflow/tfjs-backend-cpu/dist/utils/unary_types';\n\nexport type SimpleBinaryKernelImplCPU = SimpleBinaryKernelImpl;\nexport type SimpleUnaryKernelImplCPU = SimpleUnaryImpl;\nconst {\n  addImpl: addImplCPU,\n  bincountImpl: bincountImplCPU,\n  bincountReduceImpl: bincountReduceImplCPU,\n  ceilImpl: ceilImplCPU,\n  concatImpl: concatImplCPU,\n  equalImpl: equalImplCPU,\n  expImpl: expImplCPU,\n  expm1Impl: expm1ImplCPU,\n  floorImpl: floorImplCPU,\n  gatherNdImpl: gatherNdImplCPU,\n  gatherV2Impl: gatherV2ImplCPU,\n  greaterImpl: greaterImplCPU,\n  greaterEqualImpl: greaterEqualImplCPU,\n  lessImpl: lessImplCPU,\n  lessEqualImpl: lessEqualImplCPU,\n  linSpaceImpl: linSpaceImplCPU,\n  logImpl: logImplCPU,\n  maxImpl: maxImplCPU,\n  maximumImpl: maximumImplCPU,\n  minimumImpl: minimumImplCPU,\n  multiplyImpl: multiplyImplCPU,\n  negImpl: negImplCPU,\n  notEqualImpl: notEqualImplCPU,\n  prodImpl: prodImplCPU,\n  rangeImpl: rangeImplCPU,\n  rsqrtImpl: rsqrtImplCPU,\n  sigmoidImpl: sigmoidImplCPU,\n  simpleAbsImpl: simpleAbsImplCPU,\n  sliceImpl: sliceImplCPU,\n  sparseFillEmptyRowsImpl: sparseFillEmptyRowsImplCPU,\n  sparseReshapeImpl: sparseReshapeImplCPU,\n  sparseSegmentReductionImpl: sparseSegmentReductionImplCPU,\n  sqrtImpl: sqrtImplCPU,\n  stridedSliceImpl: stridedSliceImplCPU,\n  stringNGramsImpl: stringNGramsImplCPU,\n  stringSplitImpl: stringSplitImplCPU,\n  stringToHashBucketFastImpl: stringToHashBucketFastImplCPU,\n  subImpl: subImplCPU,\n  tileImpl: tileImplCPU,\n  topKImpl: topKImplCPU,\n  transposeImpl: transposeImplCPU,\n  uniqueImpl: uniqueImplCPU,\n} = shared;\n\nexport {\n  addImplCPU,\n  bincountImplCPU,\n  bincountReduceImplCPU,\n  ceilImplCPU,\n  concatImplCPU,\n  equalImplCPU,\n  expImplCPU,\n  expm1ImplCPU,\n  floorImplCPU,\n  gatherNdImplCPU,\n  gatherV2ImplCPU,\n  greaterEqualImplCPU,\n  greaterImplCPU,\n  lessEqualImplCPU,\n  lessImplCPU,\n  linSpaceImplCPU,\n  logImplCPU,\n  maxImplCPU,\n  maximumImplCPU,\n  minimumImplCPU,\n  multiplyImplCPU,\n  negImplCPU,\n  notEqualImplCPU,\n  prodImplCPU,\n  sigmoidImplCPU,\n  simpleAbsImplCPU,\n  sliceImplCPU,\n  sparseFillEmptyRowsImplCPU,\n  sparseReshapeImplCPU,\n  sparseSegmentReductionImplCPU,\n  sqrtImplCPU,\n  stridedSliceImplCPU,\n  stringNGramsImplCPU,\n  stringSplitImplCPU,\n  stringToHashBucketFastImplCPU,\n  subImplCPU,\n  rangeImplCPU,\n  rsqrtImplCPU,\n  tileImplCPU,\n  topKImplCPU,\n  transposeImplCPU,\n  uniqueImplCPU,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}