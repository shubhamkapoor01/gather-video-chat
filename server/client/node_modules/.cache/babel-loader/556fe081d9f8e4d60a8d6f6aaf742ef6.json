{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [{\n  \"tfOpName\": \"Cast\",\n  \"category\": \"transformation\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }],\n  \"attrs\": [{\n    \"tfName\": \"SrcT\",\n    \"name\": \"sdtype\",\n    \"type\": \"dtype\",\n    \"notSupported\": true\n  }, {\n    \"tfName\": \"DstT\",\n    \"name\": \"dtype\",\n    \"type\": \"dtype\"\n  }]\n}, {\n  \"tfOpName\": \"ExpandDims\",\n  \"category\": \"transformation\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"axis\",\n    \"type\": \"number\"\n  }]\n}, {\n  \"tfOpName\": \"MirrorPad\",\n  \"category\": \"transformation\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"padding\",\n    \"type\": \"number[]\"\n  }],\n  \"attrs\": [{\n    \"tfName\": \"mode\",\n    \"name\": \"mode\",\n    \"type\": \"string\"\n  }]\n}, {\n  \"tfOpName\": \"Pad\",\n  \"category\": \"transformation\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"padding\",\n    \"type\": \"number[]\"\n  }],\n  \"attrs\": [{\n    \"tfName\": \"constant_value\",\n    \"name\": \"constantValue\",\n    \"type\": \"number\",\n    \"defaultValue\": 0\n  }]\n}, {\n  \"tfOpName\": \"PadV2\",\n  \"category\": \"transformation\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"padding\",\n    \"type\": \"number[]\"\n  }, {\n    \"start\": 2,\n    \"name\": \"constantValue\",\n    \"type\": \"number\",\n    \"defaultValue\": 0\n  }]\n}, {\n  \"tfOpName\": \"Reshape\",\n  \"category\": \"transformation\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"shape\",\n    \"type\": \"number[]\"\n  }]\n}, {\n  \"tfOpName\": \"Squeeze\",\n  \"category\": \"transformation\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }],\n  \"attrs\": [{\n    \"tfName\": \"axis\",\n    \"tfDeprecatedName\": \"squeeze_dims\",\n    \"name\": \"axis\",\n    \"type\": \"number[]\"\n  }]\n}, {\n  \"tfOpName\": \"SpaceToBatchND\",\n  \"category\": \"transformation\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"blockShape\",\n    \"type\": \"number[]\"\n  }, {\n    \"start\": 2,\n    \"name\": \"paddings\",\n    \"type\": \"number[]\"\n  }]\n}, {\n  \"tfOpName\": \"BatchToSpaceND\",\n  \"category\": \"transformation\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"blockShape\",\n    \"type\": \"number[]\"\n  }, {\n    \"start\": 2,\n    \"name\": \"crops\",\n    \"type\": \"number[]\"\n  }]\n}, {\n  \"tfOpName\": \"DepthToSpace\",\n  \"category\": \"transformation\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }],\n  \"attrs\": [{\n    \"tfName\": \"block_size\",\n    \"name\": \"blockSize\",\n    \"type\": \"number\"\n  }, {\n    \"tfName\": \"data_format\",\n    \"name\": \"dataFormat\",\n    \"type\": \"string\"\n  }]\n}, {\n  \"tfOpName\": \"BroadcastTo\",\n  \"category\": \"transformation\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"shape\",\n    \"type\": \"number[]\"\n  }],\n  \"attrs\": []\n}, {\n  \"tfOpName\": \"BroadcastArgs\",\n  \"category\": \"transformation\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"s0\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"s1\",\n    \"type\": \"tensor\"\n  }],\n  \"attrs\": []\n}];","map":{"version":3,"sources":["../../../../../../../tfjs-converter/src/operations/op_list/transformation.ts"],"names":[],"mappings":"AACA;;;;;;;;;;;;;;;AAeG;AAIH,OAAO,MAAM,IAAI,GAAe,CAC9B;AACE,cAAY,MADd;AAEE,cAAY,gBAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,CAHZ;AAUE,WAAS,CACP;AACE,cAAU,MADZ;AAEE,YAAQ,QAFV;AAGE,YAAQ,OAHV;AAIE,oBAAgB;AAJlB,GADO,EAOP;AACE,cAAU,MADZ;AAEE,YAAQ,OAFV;AAGE,YAAQ;AAHV,GAPO;AAVX,CAD8B,EAyB9B;AACE,cAAY,YADd;AAEE,cAAY,gBAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,MAFV;AAGE,YAAQ;AAHV,GANQ;AAHZ,CAzB8B,EAyC9B;AACE,cAAY,WADd;AAEE,cAAY,gBAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,SAFV;AAGE,YAAQ;AAHV,GANQ,CAHZ;AAeE,WAAS,CACP;AACE,cAAU,MADZ;AAEE,YAAQ,MAFV;AAGE,YAAQ;AAHV,GADO;AAfX,CAzC8B,EAgE9B;AACE,cAAY,KADd;AAEE,cAAY,gBAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,SAFV;AAGE,YAAQ;AAHV,GANQ,CAHZ;AAeE,WAAS,CACP;AACE,cAAU,gBADZ;AAEE,YAAQ,eAFV;AAGE,YAAQ,QAHV;AAIE,oBAAgB;AAJlB,GADO;AAfX,CAhE8B,EAwF9B;AACE,cAAY,OADd;AAEE,cAAY,gBAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,SAFV;AAGE,YAAQ;AAHV,GANQ,EAWR;AACE,aAAS,CADX;AAEE,YAAQ,eAFV;AAGE,YAAQ,QAHV;AAIE,oBAAgB;AAJlB,GAXQ;AAHZ,CAxF8B,EA8G9B;AACE,cAAY,SADd;AAEE,cAAY,gBAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,OAFV;AAGE,YAAQ;AAHV,GANQ;AAHZ,CA9G8B,EA8H9B;AACE,cAAY,SADd;AAEE,cAAY,gBAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,CAHZ;AAUE,WAAS,CACP;AACE,cAAU,MADZ;AAEE,wBAAoB,cAFtB;AAGE,YAAQ,MAHV;AAIE,YAAQ;AAJV,GADO;AAVX,CA9H8B,EAiJ9B;AACE,cAAY,gBADd;AAEE,cAAY,gBAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,YAFV;AAGE,YAAQ;AAHV,GANQ,EAWR;AACE,aAAS,CADX;AAEE,YAAQ,UAFV;AAGE,YAAQ;AAHV,GAXQ;AAHZ,CAjJ8B,EAsK9B;AACE,cAAY,gBADd;AAEE,cAAY,gBAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,YAFV;AAGE,YAAQ;AAHV,GANQ,EAWR;AACE,aAAS,CADX;AAEE,YAAQ,OAFV;AAGE,YAAQ;AAHV,GAXQ;AAHZ,CAtK8B,EA2L9B;AACE,cAAY,cADd;AAEE,cAAY,gBAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,CAHZ;AAUE,WAAS,CACP;AACE,cAAU,YADZ;AAEE,YAAQ,WAFV;AAGE,YAAQ;AAHV,GADO,EAMP;AACE,cAAU,aADZ;AAEE,YAAQ,YAFV;AAGE,YAAQ;AAHV,GANO;AAVX,CA3L8B,EAkN9B;AACE,cAAY,aADd;AAEE,cAAY,gBAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,OAFV;AAGE,YAAQ;AAHV,GANQ,CAHZ;AAeE,WAAS;AAfX,CAlN8B,EAmO9B;AACE,cAAY,eADd;AAEE,cAAY,gBAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,IAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,IAFV;AAGE,YAAQ;AAHV,GANQ,CAHZ;AAeE,WAAS;AAfX,CAnO8B,CAAzB","sourcesContent":["\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    \"tfOpName\": \"Cast\",\n    \"category\": \"transformation\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      }\n    ],\n    \"attrs\": [\n      {\n        \"tfName\": \"SrcT\",\n        \"name\": \"sdtype\",\n        \"type\": \"dtype\",\n        \"notSupported\": true\n      },\n      {\n        \"tfName\": \"DstT\",\n        \"name\": \"dtype\",\n        \"type\": \"dtype\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"ExpandDims\",\n    \"category\": \"transformation\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"axis\",\n        \"type\": \"number\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"MirrorPad\",\n    \"category\": \"transformation\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"padding\",\n        \"type\": \"number[]\"\n      }\n    ],\n    \"attrs\": [\n      {\n        \"tfName\": \"mode\",\n        \"name\": \"mode\",\n        \"type\": \"string\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"Pad\",\n    \"category\": \"transformation\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"padding\",\n        \"type\": \"number[]\"\n      }\n    ],\n    \"attrs\": [\n      {\n        \"tfName\": \"constant_value\",\n        \"name\": \"constantValue\",\n        \"type\": \"number\",\n        \"defaultValue\": 0\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"PadV2\",\n    \"category\": \"transformation\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"padding\",\n        \"type\": \"number[]\"\n      },\n      {\n        \"start\": 2,\n        \"name\": \"constantValue\",\n        \"type\": \"number\",\n        \"defaultValue\": 0\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"Reshape\",\n    \"category\": \"transformation\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"shape\",\n        \"type\": \"number[]\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"Squeeze\",\n    \"category\": \"transformation\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      }\n    ],\n    \"attrs\": [\n      {\n        \"tfName\": \"axis\",\n        \"tfDeprecatedName\": \"squeeze_dims\",\n        \"name\": \"axis\",\n        \"type\": \"number[]\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"SpaceToBatchND\",\n    \"category\": \"transformation\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"blockShape\",\n        \"type\": \"number[]\"\n      },\n      {\n        \"start\": 2,\n        \"name\": \"paddings\",\n        \"type\": \"number[]\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"BatchToSpaceND\",\n    \"category\": \"transformation\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"blockShape\",\n        \"type\": \"number[]\"\n      },\n      {\n        \"start\": 2,\n        \"name\": \"crops\",\n        \"type\": \"number[]\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"DepthToSpace\",\n    \"category\": \"transformation\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      }\n    ],\n    \"attrs\": [\n      {\n        \"tfName\": \"block_size\",\n        \"name\": \"blockSize\",\n        \"type\": \"number\"\n      },\n      {\n        \"tfName\": \"data_format\",\n        \"name\": \"dataFormat\",\n        \"type\": \"string\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"BroadcastTo\",\n    \"category\": \"transformation\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"shape\",\n        \"type\": \"number[]\"\n      }\n    ],\n    \"attrs\": []\n  },\n  {\n    \"tfOpName\": \"BroadcastArgs\",\n    \"category\": \"transformation\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"s0\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"s1\",\n        \"type\": \"tensor\"\n      }\n    ],\n    \"attrs\": []\n  }\n];\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}