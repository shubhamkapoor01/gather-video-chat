{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { batchToSpaceND } from '../../ops/batch_to_space_nd';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.batchToSpaceND = function (blockShape, crops) {\n  this.throwIfDisposed();\n  return batchToSpaceND(this, blockShape, crops);\n};","map":{"version":3,"sources":["../../../../../../../tfjs-core/src/public/chained_ops/batch_to_space_nd.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,cAAR,QAA6B,6BAA7B;AACA,SAAQ,oBAAR,QAA2C,cAA3C;;AAUA,oBAAoB,GAAG,SAAvB,CAAiC,cAAjC,GAAkD,UAC9C,UAD8C,EACxB,KADwB,EACP;AACzC,OAAK,eAAL;AACA,SAAO,cAAc,CAAC,IAAD,EAAO,UAAP,EAAmB,KAAnB,CAArB;AACD,CAJD","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {batchToSpaceND} from '../../ops/batch_to_space_nd';\nimport {getGlobalTensorClass, Tensor} from '../../tensor';\nimport {Rank} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    batchToSpaceND<R extends Rank>(blockShape: number[], crops: number[][]):\n        Tensor<R>;\n  }\n}\n\ngetGlobalTensorClass().prototype.batchToSpaceND = function<R extends Rank>(\n    blockShape: number[], crops: number[][]): Tensor<R> {\n  this.throwIfDisposed();\n  return batchToSpaceND(this, blockShape, crops);\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}