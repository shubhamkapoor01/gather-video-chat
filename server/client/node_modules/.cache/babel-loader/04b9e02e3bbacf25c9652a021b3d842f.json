{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs3/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime-corejs3/helpers/toConsumableArray\";\nimport _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\nimport _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";\nimport _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";\n/* eslint no-console: [\"off\"] */\n\nimport styleConsole from './styleConsole';\n\nfunction format(category, arg0) {\n  var _context, _context2;\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  return _concatInstanceProperty(_context = [_concatInstanceProperty(_context2 = \"%c\".concat(category, \"%c \")).call(_context2, arg0)]).call(_context, _toConsumableArray(styleConsole('green', 'white')), args);\n}\n\nexport default function debug(category) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$force = _ref.force,\n      force = _ref$force === void 0 ? false : _ref$force;\n\n  if (!force) {\n    return function () {\n      return 0;\n    };\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    if (!args.length) {\n      return;\n    }\n\n    var _args = args,\n        _args2 = _slicedToArray(_args, 1),\n        arg0 = _args2[0];\n\n    if (typeof arg0 === 'function') {\n      args = arg0();\n    }\n\n    var lines = _Array$isArray(args[0]) ? args : [args];\n    var oneLiner = lines.length === 1;\n\n    _forEachInstanceProperty(lines).call(lines, function (line, index) {\n      if (oneLiner) {\n        var _console, _context3;\n\n        (_console = console).log.apply(_console, _toConsumableArray(format.apply(void 0, _concatInstanceProperty(_context3 = [category]).call(_context3, _toConsumableArray(line)))));\n      } else if (index) {\n        var _console2;\n\n        (_console2 = console).log.apply(_console2, _toConsumableArray(_Array$isArray(line) ? line : [line]));\n      } else {\n        var _console3, _context4;\n\n        (_console3 = console).groupCollapsed.apply(_console3, _toConsumableArray(format.apply(void 0, _concatInstanceProperty(_context4 = [category]).call(_context4, _toConsumableArray(line)))));\n      }\n    });\n\n    oneLiner || console.groupEnd();\n  };\n}","map":{"version":3,"sources":["../../../src/utils/debug.js"],"names":["args","styleConsole","force","arg0","lines","oneLiner","format","console"],"mappings":"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","sourcesContent":["/* eslint no-console: [\"off\"] */\n\nimport styleConsole from './styleConsole';\n\nfunction format(category, arg0, ...args) {\n  return [`%c${category}%c ${arg0}`, ...styleConsole('green', 'white'), ...args];\n}\n\nexport default function debug(category, { force = false } = {}) {\n  if (!force) {\n    return () => 0;\n  }\n\n  return (...args) => {\n    if (!args.length) {\n      return;\n    }\n\n    const [arg0] = args;\n\n    if (typeof arg0 === 'function') {\n      args = arg0();\n    }\n\n    const lines = Array.isArray(args[0]) ? args : [args];\n    const oneLiner = lines.length === 1;\n\n    lines.forEach((line, index) => {\n      if (oneLiner) {\n        console.log(...format(category, ...line));\n      } else if (index) {\n        console.log(...(Array.isArray(line) ? line : [line]));\n      } else {\n        console.groupCollapsed(...format(category, ...line));\n      }\n    });\n\n    oneLiner || console.groupEnd();\n  };\n}\n"]},"metadata":{},"sourceType":"module"}