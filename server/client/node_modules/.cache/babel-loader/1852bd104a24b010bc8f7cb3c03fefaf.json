{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [{\n  \"tfOpName\": \"Bincount\",\n  \"category\": \"reduction\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"size\",\n    \"type\": \"number\"\n  }, {\n    \"start\": 2,\n    \"name\": \"weights\",\n    \"type\": \"tensor\"\n  }]\n}, {\n  \"tfOpName\": \"DenseBincount\",\n  \"category\": \"reduction\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"size\",\n    \"type\": \"number\"\n  }, {\n    \"start\": 2,\n    \"name\": \"weights\",\n    \"type\": \"tensor\"\n  }],\n  \"attrs\": [{\n    \"tfName\": \"binary_output\",\n    \"name\": \"binaryOutput\",\n    \"type\": \"bool\"\n  }]\n}, {\n  \"tfOpName\": \"Max\",\n  \"category\": \"reduction\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"axis\",\n    \"type\": \"number[]\"\n  }],\n  \"attrs\": [{\n    \"tfName\": \"keep_dims\",\n    \"name\": \"keepDims\",\n    \"type\": \"bool\"\n  }]\n}, {\n  \"tfOpName\": \"Mean\",\n  \"category\": \"reduction\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"axis\",\n    \"type\": \"number[]\"\n  }],\n  \"attrs\": [{\n    \"tfName\": \"keep_dims\",\n    \"name\": \"keepDims\",\n    \"type\": \"bool\"\n  }]\n}, {\n  \"tfOpName\": \"Min\",\n  \"category\": \"reduction\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"axis\",\n    \"type\": \"number[]\"\n  }],\n  \"attrs\": [{\n    \"tfName\": \"keep_dims\",\n    \"name\": \"keepDims\",\n    \"type\": \"bool\"\n  }]\n}, {\n  \"tfOpName\": \"Sum\",\n  \"category\": \"reduction\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"axis\",\n    \"type\": \"number[]\"\n  }],\n  \"attrs\": [{\n    \"tfName\": \"keep_dims\",\n    \"name\": \"keepDims\",\n    \"type\": \"bool\"\n  }]\n}, {\n  \"tfOpName\": \"All\",\n  \"category\": \"reduction\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"axis\",\n    \"type\": \"number[]\"\n  }],\n  \"attrs\": [{\n    \"tfName\": \"keep_dims\",\n    \"name\": \"keepDims\",\n    \"type\": \"bool\"\n  }]\n}, {\n  \"tfOpName\": \"Any\",\n  \"category\": \"reduction\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"axis\",\n    \"type\": \"number[]\"\n  }],\n  \"attrs\": [{\n    \"tfName\": \"keep_dims\",\n    \"name\": \"keepDims\",\n    \"type\": \"bool\"\n  }]\n}, {\n  \"tfOpName\": \"ArgMax\",\n  \"category\": \"reduction\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"axis\",\n    \"type\": \"number\"\n  }]\n}, {\n  \"tfOpName\": \"ArgMin\",\n  \"category\": \"reduction\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"axis\",\n    \"type\": \"number\"\n  }]\n}, {\n  \"tfOpName\": \"Prod\",\n  \"category\": \"reduction\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"axis\",\n    \"type\": \"number[]\"\n  }],\n  \"attrs\": [{\n    \"tfName\": \"keep_dims\",\n    \"name\": \"keepDims\",\n    \"type\": \"bool\"\n  }]\n}, {\n  \"tfOpName\": \"Cumsum\",\n  \"category\": \"reduction\",\n  \"inputs\": [{\n    \"start\": 0,\n    \"name\": \"x\",\n    \"type\": \"tensor\"\n  }, {\n    \"start\": 1,\n    \"name\": \"axis\",\n    \"type\": \"number\"\n  }],\n  \"attrs\": [{\n    \"tfName\": \"exclusive\",\n    \"name\": \"exclusive\",\n    \"type\": \"bool\"\n  }, {\n    \"tfName\": \"reverse\",\n    \"name\": \"reverse\",\n    \"type\": \"bool\"\n  }]\n}];","map":{"version":3,"sources":["../../../../../../../tfjs-converter/src/operations/op_list/reduction.ts"],"names":[],"mappings":"AACA;;;;;;;;;;;;;;;AAeG;AAIH,OAAO,MAAM,IAAI,GAAe,CAC9B;AACE,cAAY,UADd;AAEE,cAAY,WAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,MAFV;AAGE,YAAQ;AAHV,GANQ,EAWR;AACE,aAAS,CADX;AAEE,YAAQ,SAFV;AAGE,YAAQ;AAHV,GAXQ;AAHZ,CAD8B,EAsB9B;AACE,cAAY,eADd;AAEE,cAAY,WAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,MAFV;AAGE,YAAQ;AAHV,GANQ,EAWR;AACE,aAAS,CADX;AAEE,YAAQ,SAFV;AAGE,YAAQ;AAHV,GAXQ,CAHZ;AAoBE,WAAS,CACP;AACE,cAAU,eADZ;AAEE,YAAQ,cAFV;AAGE,YAAQ;AAHV,GADO;AApBX,CAtB8B,EAkD9B;AACE,cAAY,KADd;AAEE,cAAY,WAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,MAFV;AAGE,YAAQ;AAHV,GANQ,CAHZ;AAeE,WAAS,CACP;AACE,cAAU,WADZ;AAEE,YAAQ,UAFV;AAGE,YAAQ;AAHV,GADO;AAfX,CAlD8B,EAyE9B;AACE,cAAY,MADd;AAEE,cAAY,WAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,MAFV;AAGE,YAAQ;AAHV,GANQ,CAHZ;AAeE,WAAS,CACP;AACE,cAAU,WADZ;AAEE,YAAQ,UAFV;AAGE,YAAQ;AAHV,GADO;AAfX,CAzE8B,EAgG9B;AACE,cAAY,KADd;AAEE,cAAY,WAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,MAFV;AAGE,YAAQ;AAHV,GANQ,CAHZ;AAeE,WAAS,CACP;AACE,cAAU,WADZ;AAEE,YAAQ,UAFV;AAGE,YAAQ;AAHV,GADO;AAfX,CAhG8B,EAuH9B;AACE,cAAY,KADd;AAEE,cAAY,WAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,MAFV;AAGE,YAAQ;AAHV,GANQ,CAHZ;AAeE,WAAS,CACP;AACE,cAAU,WADZ;AAEE,YAAQ,UAFV;AAGE,YAAQ;AAHV,GADO;AAfX,CAvH8B,EA8I9B;AACE,cAAY,KADd;AAEE,cAAY,WAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,MAFV;AAGE,YAAQ;AAHV,GANQ,CAHZ;AAeE,WAAS,CACP;AACE,cAAU,WADZ;AAEE,YAAQ,UAFV;AAGE,YAAQ;AAHV,GADO;AAfX,CA9I8B,EAqK9B;AACE,cAAY,KADd;AAEE,cAAY,WAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,MAFV;AAGE,YAAQ;AAHV,GANQ,CAHZ;AAeE,WAAS,CACP;AACE,cAAU,WADZ;AAEE,YAAQ,UAFV;AAGE,YAAQ;AAHV,GADO;AAfX,CArK8B,EA4L9B;AACE,cAAY,QADd;AAEE,cAAY,WAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,MAFV;AAGE,YAAQ;AAHV,GANQ;AAHZ,CA5L8B,EA4M9B;AACE,cAAY,QADd;AAEE,cAAY,WAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,MAFV;AAGE,YAAQ;AAHV,GANQ;AAHZ,CA5M8B,EA4N9B;AACE,cAAY,MADd;AAEE,cAAY,WAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,MAFV;AAGE,YAAQ;AAHV,GANQ,CAHZ;AAeE,WAAS,CACP;AACE,cAAU,WADZ;AAEE,YAAQ,UAFV;AAGE,YAAQ;AAHV,GADO;AAfX,CA5N8B,EAmP9B;AACE,cAAY,QADd;AAEE,cAAY,WAFd;AAGE,YAAU,CACR;AACE,aAAS,CADX;AAEE,YAAQ,GAFV;AAGE,YAAQ;AAHV,GADQ,EAMR;AACE,aAAS,CADX;AAEE,YAAQ,MAFV;AAGE,YAAQ;AAHV,GANQ,CAHZ;AAeE,WAAS,CACP;AACE,cAAU,WADZ;AAEE,YAAQ,WAFV;AAGE,YAAQ;AAHV,GADO,EAMP;AACE,cAAU,SADZ;AAEE,YAAQ,SAFV;AAGE,YAAQ;AAHV,GANO;AAfX,CAnP8B,CAAzB","sourcesContent":["\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    \"tfOpName\": \"Bincount\",\n    \"category\": \"reduction\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"size\",\n        \"type\": \"number\"\n      },\n      {\n        \"start\": 2,\n        \"name\": \"weights\",\n        \"type\": \"tensor\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"DenseBincount\",\n    \"category\": \"reduction\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"size\",\n        \"type\": \"number\"\n      },\n      {\n        \"start\": 2,\n        \"name\": \"weights\",\n        \"type\": \"tensor\"\n      }\n    ],\n    \"attrs\": [\n      {\n        \"tfName\": \"binary_output\",\n        \"name\": \"binaryOutput\",\n        \"type\": \"bool\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"Max\",\n    \"category\": \"reduction\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"axis\",\n        \"type\": \"number[]\"\n      }\n    ],\n    \"attrs\": [\n      {\n        \"tfName\": \"keep_dims\",\n        \"name\": \"keepDims\",\n        \"type\": \"bool\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"Mean\",\n    \"category\": \"reduction\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"axis\",\n        \"type\": \"number[]\"\n      }\n    ],\n    \"attrs\": [\n      {\n        \"tfName\": \"keep_dims\",\n        \"name\": \"keepDims\",\n        \"type\": \"bool\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"Min\",\n    \"category\": \"reduction\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"axis\",\n        \"type\": \"number[]\"\n      }\n    ],\n    \"attrs\": [\n      {\n        \"tfName\": \"keep_dims\",\n        \"name\": \"keepDims\",\n        \"type\": \"bool\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"Sum\",\n    \"category\": \"reduction\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"axis\",\n        \"type\": \"number[]\"\n      }\n    ],\n    \"attrs\": [\n      {\n        \"tfName\": \"keep_dims\",\n        \"name\": \"keepDims\",\n        \"type\": \"bool\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"All\",\n    \"category\": \"reduction\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"axis\",\n        \"type\": \"number[]\"\n      }\n    ],\n    \"attrs\": [\n      {\n        \"tfName\": \"keep_dims\",\n        \"name\": \"keepDims\",\n        \"type\": \"bool\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"Any\",\n    \"category\": \"reduction\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"axis\",\n        \"type\": \"number[]\"\n      }\n    ],\n    \"attrs\": [\n      {\n        \"tfName\": \"keep_dims\",\n        \"name\": \"keepDims\",\n        \"type\": \"bool\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"ArgMax\",\n    \"category\": \"reduction\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"axis\",\n        \"type\": \"number\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"ArgMin\",\n    \"category\": \"reduction\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"axis\",\n        \"type\": \"number\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"Prod\",\n    \"category\": \"reduction\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"axis\",\n        \"type\": \"number[]\"\n      }\n    ],\n    \"attrs\": [\n      {\n        \"tfName\": \"keep_dims\",\n        \"name\": \"keepDims\",\n        \"type\": \"bool\"\n      }\n    ]\n  },\n  {\n    \"tfOpName\": \"Cumsum\",\n    \"category\": \"reduction\",\n    \"inputs\": [\n      {\n        \"start\": 0,\n        \"name\": \"x\",\n        \"type\": \"tensor\"\n      },\n      {\n        \"start\": 1,\n        \"name\": \"axis\",\n        \"type\": \"number\"\n      }\n    ],\n    \"attrs\": [\n      {\n        \"tfName\": \"exclusive\",\n        \"name\": \"exclusive\",\n        \"type\": \"bool\"\n      },\n      {\n        \"tfName\": \"reverse\",\n        \"name\": \"reverse\",\n        \"type\": \"bool\"\n      }\n    ]\n  }\n];\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}