{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport { registerKernel } from '@tensorflow/tfjs-core';\nimport { _fusedMatMulConfig } from './kernels/_FusedMatMul';\nimport { absConfig } from './kernels/Abs';\nimport { acosConfig } from './kernels/Acos';\nimport { acoshConfig } from './kernels/Acosh';\nimport { addConfig } from './kernels/Add';\nimport { addNConfig } from './kernels/AddN';\nimport { allConfig } from './kernels/All';\nimport { anyConfig } from './kernels/Any';\nimport { argMaxConfig } from './kernels/ArgMax';\nimport { argMinConfig } from './kernels/ArgMin';\nimport { asinConfig } from './kernels/Asin';\nimport { asinhConfig } from './kernels/Asinh';\nimport { atanConfig } from './kernels/Atan';\nimport { atan2Config } from './kernels/Atan2';\nimport { atanhConfig } from './kernels/Atanh';\nimport { avgPoolConfig } from './kernels/AvgPool';\nimport { avgPool3DConfig } from './kernels/AvgPool3D';\nimport { avgPool3DGradConfig } from './kernels/AvgPool3DGrad';\nimport { avgPoolGradConfig } from './kernels/AvgPoolGrad';\nimport { batchMatMulConfig } from './kernels/BatchMatMul';\nimport { batchNormConfig } from './kernels/BatchNorm';\nimport { batchToSpaceNDConfig } from './kernels/BatchToSpaceND';\nimport { bincountConfig } from './kernels/Bincount';\nimport { broadcastArgsConfig } from './kernels/BroadcastArgs';\nimport { castConfig } from './kernels/Cast';\nimport { ceilConfig } from './kernels/Ceil';\nimport { clipConfig } from './kernels/Clip';\nimport { complexConfig } from './kernels/Complex';\nimport { complexAbsConfig } from './kernels/ComplexAbs';\nimport { concatConfig } from './kernels/Concat';\nimport { conv2DConfig } from './kernels/Conv2D';\nimport { conv2DBackpropFilterConfig } from './kernels/Conv2DBackpropFilter';\nimport { conv2DBackpropInputConfig } from './kernels/Conv2DBackpropInput';\nimport { conv3DConfig } from './kernels/Conv3D';\nimport { conv3DBackpropFilterV2Config } from './kernels/Conv3DBackpropFilterV2';\nimport { conv3DBackpropInputV2Config } from './kernels/Conv3DBackpropInputV2';\nimport { cosConfig } from './kernels/Cos';\nimport { coshConfig } from './kernels/Cosh';\nimport { cropAndResizeConfig } from './kernels/CropAndResize';\nimport { cumsumConfig } from './kernels/Cumsum';\nimport { denseBincountConfig } from './kernels/DenseBincount';\nimport { depthToSpaceConfig } from './kernels/DepthToSpace';\nimport { depthwiseConv2dNativeConfig } from './kernels/DepthwiseConv2dNative';\nimport { depthwiseConv2dNativeBackpropFilterConfig } from './kernels/DepthwiseConv2dNativeBackpropFilter';\nimport { depthwiseConv2dNativeBackpropInputConfig } from './kernels/DepthwiseConv2dNativeBackpropInput';\nimport { diagConfig } from './kernels/Diag';\nimport { dilation2dConfig } from './kernels/Dilation2D';\nimport { dilation2dBackpropFilterConfig } from './kernels/Dilation2DBackpropFilter';\nimport { dilation2dBackpropInputConfig } from './kernels/Dilation2DBackpropInput';\nimport { einsumConfig } from './kernels/Einsum';\nimport { eluConfig } from './kernels/Elu';\nimport { eluGradConfig } from './kernels/EluGrad';\nimport { equalConfig } from './kernels/Equal';\nimport { erfConfig } from './kernels/Erf';\nimport { expConfig } from './kernels/Exp';\nimport { expandDimsConfig } from './kernels/ExpandDims';\nimport { expm1Config } from './kernels/Expm1';\nimport { fftConfig } from './kernels/FFT';\nimport { fillConfig } from './kernels/Fill';\nimport { flipLeftRightConfig } from './kernels/FlipLeftRight';\nimport { floorConfig } from './kernels/Floor';\nimport { floorDivConfig } from './kernels/FloorDiv';\nimport { fusedConv2DConfig } from './kernels/FusedConv2D';\nimport { fusedDepthwiseConv2DConfig } from './kernels/FusedDepthwiseConv2D';\nimport { gatherNdConfig } from './kernels/GatherNd';\nimport { gatherV2Config } from './kernels/GatherV2';\nimport { greaterConfig } from './kernels/Greater';\nimport { greaterEqualConfig } from './kernels/GreaterEqual';\nimport { identityConfig } from './kernels/Identity';\nimport { ifftConfig } from './kernels/IFFT';\nimport { imagConfig } from './kernels/Imag';\nimport { isFiniteConfig } from './kernels/IsFinite';\nimport { isInfConfig } from './kernels/IsInf';\nimport { isNaNConfig } from './kernels/IsNaN';\nimport { leakyReluConfig } from './kernels/LeakyRelu';\nimport { lessConfig } from './kernels/Less';\nimport { lessEqualConfig } from './kernels/LessEqual';\nimport { linSpaceConfig } from './kernels/LinSpace';\nimport { logConfig } from './kernels/Log';\nimport { log1pConfig } from './kernels/Log1p';\nimport { logicalAndConfig } from './kernels/LogicalAnd';\nimport { logicalNotConfig } from './kernels/LogicalNot';\nimport { logicalOrConfig } from './kernels/LogicalOr';\nimport { lRNConfig } from './kernels/LRN';\nimport { lRNGradConfig } from './kernels/LRNGrad';\nimport { maxConfig } from './kernels/Max';\nimport { maximumConfig } from './kernels/Maximum';\nimport { maxPoolConfig } from './kernels/MaxPool';\nimport { maxPool3DConfig } from './kernels/MaxPool3D';\nimport { maxPool3DGradConfig } from './kernels/MaxPool3DGrad';\nimport { maxPoolGradConfig } from './kernels/MaxPoolGrad';\nimport { maxPoolWithArgmaxConfig } from './kernels/MaxPoolWithArgmax';\nimport { meanConfig } from './kernels/Mean';\nimport { minConfig } from './kernels/Min';\nimport { minimumConfig } from './kernels/Minimum';\nimport { mirrorPadConfig } from './kernels/MirrorPad';\nimport { modConfig } from './kernels/Mod';\nimport { multinomialConfig } from './kernels/Multinomial';\nimport { multiplyConfig } from './kernels/Multiply';\nimport { negConfig } from './kernels/Neg';\nimport { nonMaxSuppressionV3Config } from './kernels/NonMaxSuppressionV3';\nimport { nonMaxSuppressionV4Config } from './kernels/NonMaxSuppressionV4';\nimport { nonMaxSuppressionV5Config } from './kernels/NonMaxSuppressionV5';\nimport { notEqualConfig } from './kernels/NotEqual';\nimport { oneHotConfig } from './kernels/OneHot';\nimport { onesLikeConfig } from './kernels/OnesLike';\nimport { packConfig } from './kernels/Pack';\nimport { padV2Config } from './kernels/PadV2';\nimport { powConfig } from './kernels/Pow';\nimport { preluConfig } from './kernels/Prelu';\nimport { prodConfig } from './kernels/Prod';\nimport { rangeConfig } from './kernels/Range';\nimport { realConfig } from './kernels/Real';\nimport { realDivConfig } from './kernels/RealDiv';\nimport { reciprocalConfig } from './kernels/Reciprocal';\nimport { reluConfig } from './kernels/Relu';\nimport { relu6Config } from './kernels/Relu6';\nimport { reshapeConfig } from './kernels/Reshape';\nimport { resizeBilinearConfig } from './kernels/ResizeBilinear';\nimport { resizeBilinearGradConfig } from './kernels/ResizeBilinearGrad';\nimport { resizeNearestNeighborConfig } from './kernels/ResizeNearestNeighbor';\nimport { resizeNearestNeighborGradConfig } from './kernels/ResizeNearestNeighborGrad';\nimport { reverseConfig } from './kernels/Reverse';\nimport { rotateWithOffsetConfig } from './kernels/RotateWithOffset';\nimport { roundConfig } from './kernels/Round';\nimport { rsqrtConfig } from './kernels/Rsqrt';\nimport { scatterNdConfig } from './kernels/ScatterNd';\nimport { selectConfig } from './kernels/Select';\nimport { seluConfig } from './kernels/Selu';\nimport { sigmoidConfig } from './kernels/Sigmoid';\nimport { signConfig } from './kernels/Sign';\nimport { sinConfig } from './kernels/Sin';\nimport { sinhConfig } from './kernels/Sinh';\nimport { sliceConfig } from './kernels/Slice';\nimport { softmaxConfig } from './kernels/Softmax';\nimport { softplusConfig } from './kernels/Softplus';\nimport { spaceToBatchNDConfig } from './kernels/SpaceToBatchND';\nimport { sparseFillEmptyRowsConfig } from './kernels/SparseFillEmptyRows';\nimport { sparseReshapeConfig } from './kernels/SparseReshape';\nimport { sparseSegmentMeanConfig } from './kernels/SparseSegmentMean';\nimport { sparseSegmentSumConfig } from './kernels/SparseSegmentSum';\nimport { sparseToDenseConfig } from './kernels/SparseToDense';\nimport { splitVConfig } from './kernels/SplitV';\nimport { sqrtConfig } from './kernels/Sqrt';\nimport { squareConfig } from './kernels/Square';\nimport { squaredDifferenceConfig } from './kernels/SquaredDifference';\nimport { stepConfig } from './kernels/Step';\nimport { stridedSliceConfig } from './kernels/StridedSlice';\nimport { stringNGramsConfig } from './kernels/StringNGrams';\nimport { stringSplitConfig } from './kernels/StringSplit';\nimport { stringToHashBucketFastConfig } from './kernels/StringToHashBucketFast';\nimport { subConfig } from './kernels/Sub';\nimport { sumConfig } from './kernels/Sum';\nimport { tanConfig } from './kernels/Tan';\nimport { tanhConfig } from './kernels/Tanh';\nimport { tileConfig } from './kernels/Tile';\nimport { topKConfig } from './kernels/TopK';\nimport { transformConfig } from './kernels/Transform';\nimport { transposeConfig } from './kernels/Transpose';\nimport { uniqueConfig } from './kernels/Unique';\nimport { unpackConfig } from './kernels/Unpack';\nimport { unsortedSegmentSumConfig } from './kernels/UnsortedSegmentSum';\nimport { zerosLikeConfig } from './kernels/ZerosLike'; // List all kernel configs here\n\nconst kernelConfigs = [_fusedMatMulConfig, absConfig, acosConfig, acoshConfig, addConfig, addNConfig, allConfig, anyConfig, argMaxConfig, argMinConfig, asinConfig, asinhConfig, atanConfig, atan2Config, atanhConfig, avgPoolConfig, avgPool3DConfig, avgPool3DGradConfig, avgPoolGradConfig, batchMatMulConfig, batchNormConfig, batchToSpaceNDConfig, bincountConfig, broadcastArgsConfig, castConfig, ceilConfig, clipConfig, complexConfig, complexAbsConfig, concatConfig, conv2DBackpropFilterConfig, conv2DBackpropInputConfig, conv2DConfig, conv3DBackpropFilterV2Config, conv3DBackpropInputV2Config, conv3DConfig, cosConfig, coshConfig, cropAndResizeConfig, cumsumConfig, denseBincountConfig, depthToSpaceConfig, depthwiseConv2dNativeConfig, depthwiseConv2dNativeBackpropFilterConfig, depthwiseConv2dNativeBackpropInputConfig, diagConfig, dilation2dConfig, dilation2dBackpropInputConfig, dilation2dBackpropFilterConfig, realDivConfig, einsumConfig, eluConfig, eluGradConfig, equalConfig, erfConfig, expConfig, expandDimsConfig, expm1Config, fftConfig, fillConfig, flipLeftRightConfig, floorConfig, floorDivConfig, fusedConv2DConfig, fusedDepthwiseConv2DConfig, gatherNdConfig, gatherV2Config, greaterConfig, greaterEqualConfig, identityConfig, ifftConfig, imagConfig, isFiniteConfig, isInfConfig, isNaNConfig, leakyReluConfig, lessConfig, lessEqualConfig, linSpaceConfig, logConfig, log1pConfig, logicalAndConfig, logicalNotConfig, logicalOrConfig, lRNConfig, lRNGradConfig, maximumConfig, maxPoolConfig, maxPool3DConfig, maxPool3DGradConfig, maxPoolGradConfig, maxPoolWithArgmaxConfig, maxConfig, meanConfig, minConfig, minimumConfig, mirrorPadConfig, modConfig, multinomialConfig, multiplyConfig, negConfig, nonMaxSuppressionV3Config, nonMaxSuppressionV4Config, nonMaxSuppressionV5Config, notEqualConfig, oneHotConfig, onesLikeConfig, packConfig, padV2Config, powConfig, preluConfig, prodConfig, rangeConfig, realConfig, reciprocalConfig, reluConfig, relu6Config, reshapeConfig, resizeBilinearConfig, resizeBilinearGradConfig, resizeNearestNeighborConfig, resizeNearestNeighborGradConfig, reverseConfig, rotateWithOffsetConfig, roundConfig, rsqrtConfig, scatterNdConfig, selectConfig, seluConfig, sigmoidConfig, signConfig, sinConfig, sinhConfig, sliceConfig, softmaxConfig, softplusConfig, spaceToBatchNDConfig, sparseFillEmptyRowsConfig, sparseReshapeConfig, sparseSegmentMeanConfig, sparseSegmentSumConfig, sparseToDenseConfig, splitVConfig, sqrtConfig, squareConfig, squaredDifferenceConfig, stepConfig, stridedSliceConfig, stringNGramsConfig, stringSplitConfig, stringToHashBucketFastConfig, subConfig, sumConfig, tanConfig, tanhConfig, tileConfig, topKConfig, transposeConfig, transformConfig, uniqueConfig, unpackConfig, unsortedSegmentSumConfig, zerosLikeConfig];\n\nfor (const kernelConfig of kernelConfigs) {\n  registerKernel(kernelConfig);\n}","map":{"version":3,"sources":["../../../../../tfjs-backend-cpu/src/register_all_kernels.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport { KernelConfig, registerKernel } from '@tensorflow/tfjs-core';\n\nimport {_fusedMatMulConfig} from './kernels/_FusedMatMul';\nimport {absConfig} from './kernels/Abs';\nimport {acosConfig} from './kernels/Acos';\nimport {acoshConfig} from './kernels/Acosh';\nimport {addConfig} from './kernels/Add';\nimport {addNConfig} from './kernels/AddN';\nimport {allConfig} from './kernels/All';\nimport {anyConfig} from './kernels/Any';\nimport {argMaxConfig} from './kernels/ArgMax';\nimport {argMinConfig} from './kernels/ArgMin';\nimport {asinConfig} from './kernels/Asin';\nimport {asinhConfig} from './kernels/Asinh';\nimport {atanConfig} from './kernels/Atan';\nimport {atan2Config} from './kernels/Atan2';\nimport {atanhConfig} from './kernels/Atanh';\nimport {avgPoolConfig} from './kernels/AvgPool';\nimport {avgPool3DConfig} from './kernels/AvgPool3D';\nimport {avgPool3DGradConfig} from './kernels/AvgPool3DGrad';\nimport {avgPoolGradConfig} from './kernels/AvgPoolGrad';\nimport {batchMatMulConfig} from './kernels/BatchMatMul';\nimport {batchNormConfig} from './kernels/BatchNorm';\nimport {batchToSpaceNDConfig} from './kernels/BatchToSpaceND';\nimport {bincountConfig} from './kernels/Bincount';\nimport {broadcastArgsConfig} from './kernels/BroadcastArgs';\nimport {castConfig} from './kernels/Cast';\nimport {ceilConfig} from './kernels/Ceil';\nimport {clipConfig} from './kernels/Clip';\nimport {complexConfig} from './kernels/Complex';\nimport {complexAbsConfig} from './kernels/ComplexAbs';\nimport {concatConfig} from './kernels/Concat';\nimport {conv2DConfig} from './kernels/Conv2D';\nimport {conv2DBackpropFilterConfig} from './kernels/Conv2DBackpropFilter';\nimport {conv2DBackpropInputConfig} from './kernels/Conv2DBackpropInput';\nimport {conv3DConfig} from './kernels/Conv3D';\nimport {conv3DBackpropFilterV2Config} from './kernels/Conv3DBackpropFilterV2';\nimport {conv3DBackpropInputV2Config} from './kernels/Conv3DBackpropInputV2';\nimport {cosConfig} from './kernels/Cos';\nimport {coshConfig} from './kernels/Cosh';\nimport {cropAndResizeConfig} from './kernels/CropAndResize';\nimport {cumsumConfig} from './kernels/Cumsum';\nimport {denseBincountConfig} from './kernels/DenseBincount';\nimport {depthToSpaceConfig} from './kernels/DepthToSpace';\nimport {depthwiseConv2dNativeConfig} from './kernels/DepthwiseConv2dNative';\nimport {depthwiseConv2dNativeBackpropFilterConfig} from './kernels/DepthwiseConv2dNativeBackpropFilter';\nimport {depthwiseConv2dNativeBackpropInputConfig} from './kernels/DepthwiseConv2dNativeBackpropInput';\nimport {diagConfig} from './kernels/Diag';\nimport {dilation2dConfig} from './kernels/Dilation2D';\nimport {dilation2dBackpropFilterConfig} from './kernels/Dilation2DBackpropFilter';\nimport {dilation2dBackpropInputConfig} from './kernels/Dilation2DBackpropInput';\nimport {einsumConfig} from './kernels/Einsum';\nimport {eluConfig} from './kernels/Elu';\nimport {eluGradConfig} from './kernels/EluGrad';\nimport {equalConfig} from './kernels/Equal';\nimport {erfConfig} from './kernels/Erf';\nimport {expConfig} from './kernels/Exp';\nimport {expandDimsConfig} from './kernels/ExpandDims';\nimport {expm1Config} from './kernels/Expm1';\nimport {fftConfig} from './kernels/FFT';\nimport {fillConfig} from './kernels/Fill';\nimport {flipLeftRightConfig} from './kernels/FlipLeftRight';\nimport {floorConfig} from './kernels/Floor';\nimport {floorDivConfig} from './kernels/FloorDiv';\nimport {fusedConv2DConfig} from './kernels/FusedConv2D';\nimport {fusedDepthwiseConv2DConfig} from './kernels/FusedDepthwiseConv2D';\nimport {gatherNdConfig} from './kernels/GatherNd';\nimport {gatherV2Config} from './kernels/GatherV2';\nimport {greaterConfig} from './kernels/Greater';\nimport {greaterEqualConfig} from './kernels/GreaterEqual';\nimport {identityConfig} from './kernels/Identity';\nimport {ifftConfig} from './kernels/IFFT';\nimport {imagConfig} from './kernels/Imag';\nimport {isFiniteConfig} from './kernels/IsFinite';\nimport {isInfConfig} from './kernels/IsInf';\nimport {isNaNConfig} from './kernels/IsNaN';\nimport {leakyReluConfig} from './kernels/LeakyRelu';\nimport {lessConfig} from './kernels/Less';\nimport {lessEqualConfig} from './kernels/LessEqual';\nimport {linSpaceConfig} from './kernels/LinSpace';\nimport {logConfig} from './kernels/Log';\nimport {log1pConfig} from './kernels/Log1p';\nimport {logicalAndConfig} from './kernels/LogicalAnd';\nimport {logicalNotConfig} from './kernels/LogicalNot';\nimport {logicalOrConfig} from './kernels/LogicalOr';\nimport {lRNConfig} from './kernels/LRN';\nimport {lRNGradConfig} from './kernels/LRNGrad';\nimport {maxConfig} from './kernels/Max';\nimport {maximumConfig} from './kernels/Maximum';\nimport {maxPoolConfig} from './kernels/MaxPool';\nimport {maxPool3DConfig} from './kernels/MaxPool3D';\nimport {maxPool3DGradConfig} from './kernels/MaxPool3DGrad';\nimport {maxPoolGradConfig} from './kernels/MaxPoolGrad';\nimport {maxPoolWithArgmaxConfig} from './kernels/MaxPoolWithArgmax';\nimport {meanConfig} from './kernels/Mean';\nimport {minConfig} from './kernels/Min';\nimport {minimumConfig} from './kernels/Minimum';\nimport {mirrorPadConfig} from './kernels/MirrorPad';\nimport {modConfig} from './kernels/Mod';\nimport {multinomialConfig} from './kernels/Multinomial';\nimport {multiplyConfig} from './kernels/Multiply';\nimport {negConfig} from './kernels/Neg';\nimport {nonMaxSuppressionV3Config} from './kernels/NonMaxSuppressionV3';\nimport {nonMaxSuppressionV4Config} from './kernels/NonMaxSuppressionV4';\nimport {nonMaxSuppressionV5Config} from './kernels/NonMaxSuppressionV5';\nimport {notEqualConfig} from './kernels/NotEqual';\nimport {oneHotConfig} from './kernels/OneHot';\nimport {onesLikeConfig} from './kernels/OnesLike';\nimport {packConfig} from './kernels/Pack';\nimport {padV2Config} from './kernels/PadV2';\nimport {powConfig} from './kernels/Pow';\nimport {preluConfig} from './kernels/Prelu';\nimport {prodConfig} from './kernels/Prod';\nimport {rangeConfig} from './kernels/Range';\nimport {realConfig} from './kernels/Real';\nimport {realDivConfig} from './kernels/RealDiv';\nimport {reciprocalConfig} from './kernels/Reciprocal';\nimport {reluConfig} from './kernels/Relu';\nimport {relu6Config} from './kernels/Relu6';\nimport {reshapeConfig} from './kernels/Reshape';\nimport {resizeBilinearConfig} from './kernels/ResizeBilinear';\nimport {resizeBilinearGradConfig} from './kernels/ResizeBilinearGrad';\nimport {resizeNearestNeighborConfig} from './kernels/ResizeNearestNeighbor';\nimport {resizeNearestNeighborGradConfig} from './kernels/ResizeNearestNeighborGrad';\nimport {reverseConfig} from './kernels/Reverse';\nimport {rotateWithOffsetConfig} from './kernels/RotateWithOffset';\nimport {roundConfig} from './kernels/Round';\nimport {rsqrtConfig} from './kernels/Rsqrt';\nimport {scatterNdConfig} from './kernels/ScatterNd';\nimport {selectConfig} from './kernels/Select';\nimport {seluConfig} from './kernels/Selu';\nimport {sigmoidConfig} from './kernels/Sigmoid';\nimport {signConfig} from './kernels/Sign';\nimport {sinConfig} from './kernels/Sin';\nimport {sinhConfig} from './kernels/Sinh';\nimport {sliceConfig} from './kernels/Slice';\nimport {softmaxConfig} from './kernels/Softmax';\nimport {softplusConfig} from './kernels/Softplus';\nimport {spaceToBatchNDConfig} from './kernels/SpaceToBatchND';\nimport {sparseFillEmptyRowsConfig} from './kernels/SparseFillEmptyRows';\nimport {sparseReshapeConfig} from './kernels/SparseReshape';\nimport {sparseSegmentMeanConfig} from './kernels/SparseSegmentMean';\nimport {sparseSegmentSumConfig} from './kernels/SparseSegmentSum';\nimport {sparseToDenseConfig} from './kernels/SparseToDense';\nimport {splitVConfig} from './kernels/SplitV';\nimport {sqrtConfig} from './kernels/Sqrt';\nimport {squareConfig} from './kernels/Square';\nimport {squaredDifferenceConfig} from './kernels/SquaredDifference';\nimport {stepConfig} from './kernels/Step';\nimport {stridedSliceConfig} from './kernels/StridedSlice';\nimport {stringNGramsConfig} from './kernels/StringNGrams';\nimport {stringSplitConfig} from './kernels/StringSplit';\nimport {stringToHashBucketFastConfig} from './kernels/StringToHashBucketFast';\nimport {subConfig} from './kernels/Sub';\nimport {sumConfig} from './kernels/Sum';\nimport {tanConfig} from './kernels/Tan';\nimport {tanhConfig} from './kernels/Tanh';\nimport {tileConfig} from './kernels/Tile';\nimport {topKConfig} from './kernels/TopK';\nimport {transformConfig} from './kernels/Transform';\nimport {transposeConfig} from './kernels/Transpose';\nimport {uniqueConfig} from './kernels/Unique';\nimport {unpackConfig} from './kernels/Unpack';\nimport {unsortedSegmentSumConfig} from './kernels/UnsortedSegmentSum';\nimport {zerosLikeConfig} from './kernels/ZerosLike';\n\n// List all kernel configs here\nconst kernelConfigs: KernelConfig[] = [\n  _fusedMatMulConfig,\n  absConfig,\n  acosConfig,\n  acoshConfig,\n  addConfig,\n  addNConfig,\n  allConfig,\n  anyConfig,\n  argMaxConfig,\n  argMinConfig,\n  asinConfig,\n  asinhConfig,\n  atanConfig,\n  atan2Config,\n  atanhConfig,\n  avgPoolConfig,\n  avgPool3DConfig,\n  avgPool3DGradConfig,\n  avgPoolGradConfig,\n  batchMatMulConfig,\n  batchNormConfig,\n  batchToSpaceNDConfig,\n  bincountConfig,\n  broadcastArgsConfig,\n  castConfig,\n  ceilConfig,\n  clipConfig,\n  complexConfig,\n  complexAbsConfig,\n  concatConfig,\n  conv2DBackpropFilterConfig,\n  conv2DBackpropInputConfig,\n  conv2DConfig,\n  conv3DBackpropFilterV2Config,\n  conv3DBackpropInputV2Config,\n  conv3DConfig,\n  cosConfig,\n  coshConfig,\n  cropAndResizeConfig,\n  cumsumConfig,\n  denseBincountConfig,\n  depthToSpaceConfig,\n  depthwiseConv2dNativeConfig,\n  depthwiseConv2dNativeBackpropFilterConfig,\n  depthwiseConv2dNativeBackpropInputConfig,\n  diagConfig,\n  dilation2dConfig,\n  dilation2dBackpropInputConfig,\n  dilation2dBackpropFilterConfig,\n  realDivConfig,\n  einsumConfig,\n  eluConfig,\n  eluGradConfig,\n  equalConfig,\n  erfConfig,\n  expConfig,\n  expandDimsConfig,\n  expm1Config,\n  fftConfig,\n  fillConfig,\n  flipLeftRightConfig,\n  floorConfig,\n  floorDivConfig,\n  fusedConv2DConfig,\n  fusedDepthwiseConv2DConfig,\n  gatherNdConfig,\n  gatherV2Config,\n  greaterConfig,\n  greaterEqualConfig,\n  identityConfig,\n  ifftConfig,\n  imagConfig,\n  isFiniteConfig,\n  isInfConfig,\n  isNaNConfig,\n  leakyReluConfig,\n  lessConfig,\n  lessEqualConfig,\n  linSpaceConfig,\n  logConfig,\n  log1pConfig,\n  logicalAndConfig,\n  logicalNotConfig,\n  logicalOrConfig,\n  lRNConfig,\n  lRNGradConfig,\n  maximumConfig,\n  maxPoolConfig,\n  maxPool3DConfig,\n  maxPool3DGradConfig,\n  maxPoolGradConfig,\n  maxPoolWithArgmaxConfig,\n  maxConfig,\n  meanConfig,\n  minConfig,\n  minimumConfig,\n  mirrorPadConfig,\n  modConfig,\n  multinomialConfig,\n  multiplyConfig,\n  negConfig,\n  nonMaxSuppressionV3Config,\n  nonMaxSuppressionV4Config,\n  nonMaxSuppressionV5Config,\n  notEqualConfig,\n  oneHotConfig,\n  onesLikeConfig,\n  packConfig,\n  padV2Config,\n  powConfig,\n  preluConfig,\n  prodConfig,\n  rangeConfig,\n  realConfig,\n  reciprocalConfig,\n  reluConfig,\n  relu6Config,\n  reshapeConfig,\n  resizeBilinearConfig,\n  resizeBilinearGradConfig,\n  resizeNearestNeighborConfig,\n  resizeNearestNeighborGradConfig,\n  reverseConfig,\n  rotateWithOffsetConfig,\n  roundConfig,\n  rsqrtConfig,\n  scatterNdConfig,\n  selectConfig,\n  seluConfig,\n  sigmoidConfig,\n  signConfig,\n  sinConfig,\n  sinhConfig,\n  sliceConfig,\n  softmaxConfig,\n  softplusConfig,\n  spaceToBatchNDConfig,\n  sparseFillEmptyRowsConfig,\n  sparseReshapeConfig,\n  sparseSegmentMeanConfig,\n  sparseSegmentSumConfig,\n  sparseToDenseConfig,\n  splitVConfig,\n  sqrtConfig,\n  squareConfig,\n  squaredDifferenceConfig,\n  stepConfig,\n  stridedSliceConfig,\n  stringNGramsConfig,\n  stringSplitConfig,\n  stringToHashBucketFastConfig,\n  subConfig,\n  sumConfig,\n  tanConfig,\n  tanhConfig,\n  tileConfig,\n  topKConfig,\n  transposeConfig,\n  transformConfig,\n  uniqueConfig,\n  unpackConfig,\n  unsortedSegmentSumConfig,\n  zerosLikeConfig\n];\n\nfor (const kernelConfig of kernelConfigs) {\n  registerKernel(kernelConfig);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}