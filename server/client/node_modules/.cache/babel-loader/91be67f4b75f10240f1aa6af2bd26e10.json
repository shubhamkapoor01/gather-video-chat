{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\n\n/**\r\n * Prints information about the `tf.Tensor` including its data.\r\n *\r\n * ```js\r\n * const verbose = true;\r\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print(verbose);\r\n * ```\r\n * @param x The tensor to be printed.\r\n * @param verbose Whether to print verbose information about the ` Tensor`,\r\n * including dtype and size.\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Creation'}\r\n */\nexport function print(x, verbose = false) {\n  console.log(x.toString(verbose));\n}","map":{"version":3,"sources":["../../../../../../tfjs-core/src/ops/print.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;;AAIH;;;;;;;;;;;;AAYG;AACH,OAAM,SAAU,KAAV,CAAkC,CAAlC,EAAwC,OAAO,GAAG,KAAlD,EAAuD;AAC3D,EAAA,OAAO,CAAC,GAAR,CAAY,CAAC,CAAC,QAAF,CAAW,OAAX,CAAZ;AACD","sourcesContent":["/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\n\n/**\n * Prints information about the `tf.Tensor` including its data.\n *\n * ```js\n * const verbose = true;\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print(verbose);\n * ```\n * @param x The tensor to be printed.\n * @param verbose Whether to print verbose information about the ` Tensor`,\n * including dtype and size.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function print<T extends Tensor>(x: T, verbose = false): void {\n  console.log(x.toString(verbose));\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}