{"ast":null,"code":"// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n(function (global, module, define) {\n  function XorGen(seed) {\n    var me = this; // Set up generator function.\n\n    me.next = function () {\n      // Update xor generator.\n      var X = me.x,\n          i = me.i,\n          t,\n          v,\n          w;\n      t = X[i];\n      t ^= t >>> 7;\n      v = t ^ t << 24;\n      t = X[i + 1 & 7];\n      v ^= t ^ t >>> 10;\n      t = X[i + 3 & 7];\n      v ^= t ^ t >>> 3;\n      t = X[i + 4 & 7];\n      v ^= t ^ t << 7;\n      t = X[i + 7 & 7];\n      t = t ^ t << 13;\n      v ^= t ^ t << 9;\n      X[i] = v;\n      me.i = i + 1 & 7;\n      return v;\n    };\n\n    function init(me, seed) {\n      var j,\n          w,\n          X = [];\n\n      if (seed === (seed | 0)) {\n        // Seed state array using a 32-bit integer.\n        w = X[0] = seed;\n      } else {\n        // Seed state using a string.\n        seed = '' + seed;\n\n        for (j = 0; j < seed.length; ++j) {\n          X[j & 7] = X[j & 7] << 15 ^ seed.charCodeAt(j) + X[j + 1 & 7] << 13;\n        }\n      } // Enforce an array length of 8, not all zeroes.\n\n\n      while (X.length < 8) X.push(0);\n\n      for (j = 0; j < 8 && X[j] === 0; ++j);\n\n      if (j == 8) w = X[7] = -1;else w = X[j];\n      me.x = X;\n      me.i = 0; // Discard an initial 256 values.\n\n      for (j = 256; j > 0; --j) {\n        me.next();\n      }\n    }\n\n    init(me, seed);\n  }\n\n  function copy(f, t) {\n    t.x = f.x.slice();\n    t.i = f.i;\n    return t;\n  }\n\n  function impl(seed, opts) {\n    if (seed == null) seed = +new Date();\n\n    var xg = new XorGen(seed),\n        state = opts && opts.state,\n        prng = function () {\n      return (xg.next() >>> 0) / 0x100000000;\n    };\n\n    prng.double = function () {\n      do {\n        var top = xg.next() >>> 11,\n            bot = (xg.next() >>> 0) / 0x100000000,\n            result = (top + bot) / (1 << 21);\n      } while (result === 0);\n\n      return result;\n    };\n\n    prng.int32 = xg.next;\n    prng.quick = prng;\n\n    if (state) {\n      if (state.x) copy(state, xg);\n\n      prng.state = function () {\n        return copy(xg, {});\n      };\n    }\n\n    return prng;\n  }\n\n  if (module && module.exports) {\n    module.exports = impl;\n  } else if (define && define.amd) {\n    define(function () {\n      return impl;\n    });\n  } else {\n    this.xorshift7 = impl;\n  }\n})(this, typeof module == 'object' && module, // present in node.js\ntypeof define == 'function' && define // present with an AMD loader\n);","map":{"version":3,"sources":["C:/Users/mozah/Desktop/Hanzla College files/Gather/ver-1/gather-video-chat/server/client/node_modules/seedrandom/lib/xorshift7.js"],"names":["global","module","define","XorGen","seed","me","next","X","x","i","t","v","w","init","j","length","charCodeAt","push","copy","f","slice","impl","opts","Date","xg","state","prng","double","top","bot","result","int32","quick","exports","amd","xorshift7"],"mappings":"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","sourcesContent":["// A Javascript implementaion of the \"xorshift7\" algorithm by\r\n// François Panneton and Pierre L'ecuyer:\r\n// \"On the Xorgshift Random Number Generators\"\r\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\r\n\r\n(function(global, module, define) {\r\n\r\nfunction XorGen(seed) {\r\n  var me = this;\r\n\r\n  // Set up generator function.\r\n  me.next = function() {\r\n    // Update xor generator.\r\n    var X = me.x, i = me.i, t, v, w;\r\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\r\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\r\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\r\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\r\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\r\n    X[i] = v;\r\n    me.i = (i + 1) & 7;\r\n    return v;\r\n  };\r\n\r\n  function init(me, seed) {\r\n    var j, w, X = [];\r\n\r\n    if (seed === (seed | 0)) {\r\n      // Seed state array using a 32-bit integer.\r\n      w = X[0] = seed;\r\n    } else {\r\n      // Seed state using a string.\r\n      seed = '' + seed;\r\n      for (j = 0; j < seed.length; ++j) {\r\n        X[j & 7] = (X[j & 7] << 15) ^\r\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\r\n      }\r\n    }\r\n    // Enforce an array length of 8, not all zeroes.\r\n    while (X.length < 8) X.push(0);\r\n    for (j = 0; j < 8 && X[j] === 0; ++j);\r\n    if (j == 8) w = X[7] = -1; else w = X[j];\r\n\r\n    me.x = X;\r\n    me.i = 0;\r\n\r\n    // Discard an initial 256 values.\r\n    for (j = 256; j > 0; --j) {\r\n      me.next();\r\n    }\r\n  }\r\n\r\n  init(me, seed);\r\n}\r\n\r\nfunction copy(f, t) {\r\n  t.x = f.x.slice();\r\n  t.i = f.i;\r\n  return t;\r\n}\r\n\r\nfunction impl(seed, opts) {\r\n  if (seed == null) seed = +(new Date);\r\n  var xg = new XorGen(seed),\r\n      state = opts && opts.state,\r\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\r\n  prng.double = function() {\r\n    do {\r\n      var top = xg.next() >>> 11,\r\n          bot = (xg.next() >>> 0) / 0x100000000,\r\n          result = (top + bot) / (1 << 21);\r\n    } while (result === 0);\r\n    return result;\r\n  };\r\n  prng.int32 = xg.next;\r\n  prng.quick = prng;\r\n  if (state) {\r\n    if (state.x) copy(state, xg);\r\n    prng.state = function() { return copy(xg, {}); }\r\n  }\r\n  return prng;\r\n}\r\n\r\nif (module && module.exports) {\r\n  module.exports = impl;\r\n} else if (define && define.amd) {\r\n  define(function() { return impl; });\r\n} else {\r\n  this.xorshift7 = impl;\r\n}\r\n\r\n})(\r\n  this,\r\n  (typeof module) == 'object' && module,    // present in node.js\r\n  (typeof define) == 'function' && define   // present with an AMD loader\r\n);\r\n\r\n"]},"metadata":{},"sourceType":"script"}