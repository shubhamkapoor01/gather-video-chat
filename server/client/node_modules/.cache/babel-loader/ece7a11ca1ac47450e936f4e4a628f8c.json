{"ast":null,"code":"import { avgPool } from '../../ops/avg_pool';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.avgPool = function (filterSize, strides, pad, dimRoundingMode) {\n  this.throwIfDisposed();\n  return avgPool(this, filterSize, strides, pad, dimRoundingMode);\n};","map":{"version":3,"sources":["../../../../../../../tfjs-core/src/public/chained_ops/avg_pool.ts"],"names":[],"mappings":"AAiBA,SAAQ,OAAR,QAAsB,oBAAtB;AACA,SAAQ,oBAAR,QAAuD,cAAvD;;AAYA,oBAAoB,GAAG,SAAvB,CAAiC,OAAjC,GACI,UACa,UADb,EAEI,OAFJ,EAGI,GAHJ,EAII,eAJJ,EAI4C;AAC9C,OAAK,eAAL;AACA,SAAO,OAAO,CAAC,IAAD,EAAO,UAAP,EAAmB,OAAnB,EAA4B,GAA5B,EAAiC,eAAjC,CAAd;AACD,CARD","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ExplicitPadding} from '../../ops/conv_util';\nimport {avgPool} from '../../ops/avg_pool';\nimport {getGlobalTensorClass, Tensor3D, Tensor4D} from '../../tensor';\nimport {Rank} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    avgPool<T extends Tensor3D|Tensor4D>(\n        filterSize: [number, number]|number, strides: [number, number]|number,\n        pad: 'valid'|'same'|number|ExplicitPadding,\n        dimRoundingMode?: 'floor'|'round'|'ceil'): T;\n  }\n}\n\ngetGlobalTensorClass().prototype.avgPool =\n    function<T extends Tensor3D|Tensor4D>(\n        this: T, filterSize: [number, number]|number,\n        strides: [number, number]|number,\n        pad: 'valid'|'same'|number|ExplicitPadding,\n        dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  this.throwIfDisposed();\n  return avgPool(this, filterSize, strides, pad, dimRoundingMode);\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}